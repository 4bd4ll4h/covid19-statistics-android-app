// Generated by data binding compiler. Do not edit!
package com.abd4ll4h.covid19hope.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.abd4ll4h.covid19hope.R;
import com.abd4ll4h.covid19hope.ui.main.MainViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class MainFragmentBinding extends ViewDataBinding {
  @NonNull
  public final TextView add;

  @NonNull
  public final ImageView conform;

  @NonNull
  public final ImageView death;

  @NonNull
  public final CardView globle;

  @NonNull
  public final ImageView healed;

  @NonNull
  public final ImageView img;

  @NonNull
  public final ListView list;

  @NonNull
  public final CoordinatorLayout main;

  @Bindable
  protected Boolean mIsEmpty;

  @Bindable
  protected MainViewModel.Variable mItem;

  protected MainFragmentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView add, ImageView conform, ImageView death, CardView globle, ImageView healed,
      ImageView img, ListView list, CoordinatorLayout main) {
    super(_bindingComponent, _root, _localFieldCount);
    this.add = add;
    this.conform = conform;
    this.death = death;
    this.globle = globle;
    this.healed = healed;
    this.img = img;
    this.list = list;
    this.main = main;
  }

  public abstract void setIsEmpty(@Nullable Boolean IsEmpty);

  @Nullable
  public Boolean getIsEmpty() {
    return mIsEmpty;
  }

  public abstract void setItem(@Nullable MainViewModel.Variable item);

  @Nullable
  public MainViewModel.Variable getItem() {
    return mItem;
  }

  @NonNull
  public static MainFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.main_fragment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static MainFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<MainFragmentBinding>inflateInternal(inflater, R.layout.main_fragment, root, attachToRoot, component);
  }

  @NonNull
  public static MainFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.main_fragment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static MainFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<MainFragmentBinding>inflateInternal(inflater, R.layout.main_fragment, null, false, component);
  }

  public static MainFragmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static MainFragmentBinding bind(@NonNull View view, @Nullable Object component) {
    return (MainFragmentBinding)bind(component, view, R.layout.main_fragment);
  }
}
